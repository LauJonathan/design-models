// 发布订阅者
// 订阅者，注册事件，单个事件支持多个方法
// 发布者，触发事件
// 事件解绑，事件打印
// 用闭包对象缓存事件，MVVM框架事件绑定原理从此而来

var PubSub = (function(){
  var eventObj = {};
  var subscribe = function(event, obj){
      if(!eventObj[event]){
		eventObj[event] = [];
      }
      eventObj[event].push(obj);
    };
  var publish= function(event){
      var fnArr = eventObj[event];
      if (fnArr) {
         fnArr.forEach(function(item, index){
            item();
         });
      }
    };
  var off= function(event, fn){
      var fnArr = eventObj[event];
      if(fnArr){
		  eventObj[event] = fnArr.filter(function(item){
           return item !== fn;
        });
      }
    };
  var  get= function(){
        console.log(eventObj);
    }

   return {        
		    subscribe: subscribe,
        publish: publish,
        off: off,
        get: get
   }  
}());
